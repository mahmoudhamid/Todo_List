{"version":3,"sources":["recoil.js","components/login.js","components/signup.js","components/todolist.js","App.js","index.js"],"names":["usersState","atom","key","default","userState","name","username","list","id","password","wrapState","login","signup","newItemState","defualt","Login","useRecoilState","user","setUser","useState","input","setInput","wrap","setWrap","routingWrap","className","onChange","e","target","value","placeholder","type","to","onClick","loginUser","JSON","parse","localStorage","getItem","forEach","one","setItem","stringify","Signup","Math","random","newUser","setnewUser","users","setUsers","data","found","console","log","addNewUser","TodoList","newItem","setNewItem","deleteElement","elementId","itemId","usersArray","arr","filter","item","push","toUpperCase","addToList","length","map","clearAll","App","getData","a","userData","useEffect","exact","path","element","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9c865c57.chunk.js","sourcesContent":["import { atom } from 'recoil'\r\n\r\nexport const usersState = atom({\r\n    key: 'usersState',\r\n    default: []\r\n});\r\nexport const userState = atom({\r\n    key: 'userState',\r\n    default: { name: '', username: '', list: [], id: '', password: '' }\r\n});\r\nexport const errorState = atom({\r\n    key: 'errorState',\r\n    default: ''\r\n});\r\nexport const signupState = atom({\r\n    key: 'signupState',\r\n    default: false\r\n});\r\n\r\nexport const wrapState = atom({\r\n    key: 'wrapState',\r\n    default: {\r\n        list: false,\r\n        login: true,\r\n        signup: false\r\n    }\r\n})\r\nexport const userListState = atom({\r\n    key: 'userListState',\r\n    defualt: [{\r\n        id: 0,\r\n        name: ''\r\n    }]\r\n});\r\nexport const newItemState = atom({\r\n    key: 'newItemState',\r\n    defualt: ''\r\n});\r\n","import './style.css'\r\nimport { useState } from 'react'\r\nimport { userState, errorState, wrapState, usersState } from './../recoil'\r\nimport { useRecoilState } from 'recoil'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\n\r\n\r\nconst Login = () => {\r\n\r\n    const [users, setUsers] = useRecoilState(usersState);\r\n    const [user, setUser] = useRecoilState(userState);\r\n    // const [error, setError] = useRecoilState(errorState);\r\n    const [input, setInput] = useState({ username: '', password: '' })\r\n    const [wrap, setWrap] = useRecoilState(wrapState);\r\n\r\n\r\n\r\n    const handleUsername = (e) => {\r\n        setInput({ ...input, username: e.target.value })\r\n    }\r\n\r\n    const handlePassword = (e) => {\r\n        setInput({ ...input, password: e.target.value })\r\n    }\r\n\r\n    let routingWrap = { ...wrap };\r\n    const handleSubmit = () => {\r\n        let loginUser = { ...user };\r\n        let usersArray = JSON.parse(localStorage.getItem(\"users\") || '[]');;\r\n        usersArray.forEach(one => {\r\n            if (one.username === input.username && one.password === input.password) {\r\n                loginUser = { ...user, username: one.username, name: one.name, id: one.id, list: one.list, password: one.password }\r\n                setUser(loginUser);\r\n                routingWrap = { list: true, login: false, signup: false }\r\n                setWrap(routingWrap);\r\n            }\r\n        })\r\n        // console.log(routingWrap);\r\n        // console.log(wrap);\r\n        localStorage.setItem(\"loginUser\", JSON.stringify(loginUser));\r\n        localStorage.setItem(\"wrap\", JSON.stringify(routingWrap));\r\n    }\r\n\r\n    const handleSignup = () => {\r\n        let routingWrap = { ...wrap };\r\n        routingWrap = { list: false, login: false, signup: true };\r\n        setWrap(routingWrap);\r\n        localStorage.setItem(\"wrap\", JSON.stringify(routingWrap));\r\n        localStorage.setItem(\"loginUser\", JSON.stringify([]));\r\n    }\r\n\r\n    return (\r\n        <div className=\"login\">\r\n            <div className=\"container\">\r\n                <h1>LOGIN</h1>\r\n                <input onChange={handleUsername} placeholder=\"Username\" type=\"text\" name=\"username\" />\r\n                <input onChange={handlePassword} placeholder=\"password\" type=\"password\" name=\"password\" />\r\n                <div className=\"buttons\">\r\n\r\n                    <NavLink to={(routingWrap.list) ? (\"/Todo_List/components/todolist.js\") : (\"#\")}>\r\n                        <button onClick={handleSubmit} type=\"button\" name=\"login\" value=\"Login\" >Login</button>\r\n                    </NavLink>\r\n\r\n                    <span>OR</span>\r\n                    <NavLink to={(routingWrap.signup) ? (\"/Todo_List/components/signup.js\") : (\"#\")} >\r\n                        <button onClick={handleSignup} type=\"button\" name=\"signup\">Create New Account</button>\r\n                    </NavLink>\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login\r\n","import './style.css'\r\nimport { useRecoilState } from 'recoil'\r\nimport { useState } from 'react'\r\nimport { wrapState, userState, usersState } from '../recoil'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nconst Signup = () => {\r\n    const [newUser, setnewUser] = useState({ id: Math.random(), name: '', username: '', password: '', list: [] });\r\n    const [wrap, setWrap] = useRecoilState(wrapState);\r\n    const [user, setUser] = useRecoilState(userState);\r\n    const [users, setUsers] = useRecoilState(usersState);\r\n    let routingWrap = { ...wrap };\r\n\r\n\r\n    const addNewUser = (newUser) => {\r\n        let loginUser = { ...user };\r\n        let data = [...users];\r\n        let found = false;\r\n        users.forEach(user => {\r\n            if (newUser.username === user.username) {\r\n                found = true;\r\n            }\r\n        })\r\n        console.log(found);\r\n        if (!found) {\r\n            loginUser = { name: newUser.name, username: newUser.username, list: [], id: Math.random(), password: newUser.password };\r\n            setUser(loginUser);\r\n            data = [...data, loginUser];\r\n            setUsers([...data]);\r\n            localStorage.setItem(\"users\", JSON.stringify(data));\r\n            routingWrap = { list: true, login: false, signup: false };\r\n            setWrap({ list: true, login: false, signup: false });\r\n            localStorage.setItem(\"wrap\", JSON.stringify(wrap));\r\n            localStorage.setItem(\"loginUser\", JSON.stringify(loginUser));\r\n        }\r\n    }\r\n    const saveName = (e) => {\r\n        setnewUser({ ...newUser, name: e.target.value });\r\n    }\r\n    const saveUsername = (e) => {\r\n        setnewUser({ ...newUser, username: e.target.value });\r\n    }\r\n    const savePassword = (e) => {\r\n        setnewUser({ ...newUser, password: e.target.value });\r\n    }\r\n    const saveNewUser = () => {\r\n        if (newUser.name !== '' && newUser.username !== '' && newUser.password !== '') {\r\n            addNewUser(newUser);\r\n        }\r\n        else {\r\n            console.log('incorrect')\r\n        }\r\n    }\r\n    const cancel = () => {\r\n        routingWrap = { list: false, login: true, signup: false };\r\n        setWrap({ list: false, login: true, signup: false });\r\n        localStorage.setItem(\"wrap\", JSON.stringify(wrap));\r\n    }\r\n    return (\r\n        <div className=\"signup\">\r\n            <div className=\"container\">\r\n                <h1>SIGN UP</h1>\r\n                <form>\r\n                    <label>Enter your name</label>\r\n                    <input onChange={saveName} placeholder=\"Name\" type=\"text\" name=\"name\" />\r\n                    <label>Enter your Email or Username</label>\r\n                    <input onChange={saveUsername} placeholder=\"Username\" type=\"text\" name=\"username\" />\r\n                    <label>Enter your password</label>\r\n                    <input onChange={savePassword} placeholder=\"password\" type=\"password\" name=\"password\" />\r\n                    <div className=\"confirm\" >\r\n\r\n                        <NavLink to={(routingWrap.list) ? (\"/Todo_List/components/todolist.js\") : (\"#\")}>\r\n                            <button onClick={saveNewUser} type=\"button\" name=\"login\" value=\"Login\" >Save</button>\r\n                        </NavLink>\r\n\r\n                        <NavLink to=\"/Todo_List/\">\r\n                            <button onClick={cancel} className=\"cancel\" type=\"button\" name=\"cancel\" >   Cancel</button>\r\n                        </NavLink>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Signup\r\n","import './style.css'\r\nimport { useRecoilState } from 'recoil'\r\nimport { userState, wrapState, newItemState, usersState } from './../recoil'\r\nimport { NavLink } from 'react-router-dom'\r\nconst TodoList = () => {\r\n    const [user, setUser] = useRecoilState(userState);\r\n    const [users, setUsers] = useRecoilState(usersState);\r\n    const [wrap, setWrap] = useRecoilState(wrapState);\r\n    const [newItem, setNewItem] = useRecoilState(newItemState);\r\n\r\n    const handleLogout = () => {\r\n        let routingWrap = { ...wrap };\r\n        let loginUser = { ...user, username: '', name: '', id: '', list: [], password: '' };\r\n        localStorage.setItem(\"loginUser\", JSON.stringify(loginUser));\r\n        setUser(loginUser);\r\n        routingWrap = { list: false, login: true, signup: false };\r\n\r\n        setWrap(routingWrap);\r\n        localStorage.setItem(\"wrap\", JSON.stringify(routingWrap));\r\n    }\r\n    const handleText = (e) => {\r\n        setNewItem(e.target.value);\r\n    }\r\n\r\n    const showList = () => {\r\n        if (!user.list.length) {\r\n            return (\r\n                <p>there is no items</p>\r\n            )\r\n        }\r\n        else {\r\n            return (\r\n                user.list.map(item => {\r\n                    return (\r\n                        <li key={Math.random()} className=\"item\">\r\n                            <div>{item.name}</div>\r\n                            <button onClick={() => deleteElement(user.id, item.id)}>x</button>\r\n                        </li>\r\n                    )\r\n                })\r\n            )\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n    const addToList = (id) => {\r\n        let loginUser = { ...user };\r\n        if (newItem !== '') {\r\n            let arr = [];\r\n            arr = [...loginUser.list];\r\n            arr.push({ id: Math.random(), name: newItem });\r\n            loginUser.list = [...arr];\r\n            setUser(loginUser);\r\n            setNewItem('');\r\n        }\r\n        let usersArray = JSON.parse(localStorage.getItem(\"users\") || '[]');;\r\n        usersArray = usersArray.filter(user => { return (user.id !== id) });\r\n        usersArray.push(loginUser);\r\n        localStorage.setItem(\"users\", JSON.stringify(usersArray));\r\n        localStorage.setItem(\"loginUser\", JSON.stringify(loginUser));\r\n    }\r\n\r\n\r\n    const deleteElement = (elementId, itemId) => {\r\n        let usersArray = JSON.parse(localStorage.getItem(\"users\") || '[]');;\r\n        let loginUser = { ...user };\r\n        let arr = user.list;\r\n        arr = arr.filter(item => { return (item.id !== itemId) });\r\n        loginUser.list = [...arr];\r\n        setUser(loginUser);\r\n        usersArray = usersArray.filter(user => { return (user.id !== elementId) });\r\n        usersArray.push(loginUser);\r\n        localStorage.setItem(\"users\", JSON.stringify(usersArray));\r\n        localStorage.setItem(\"loginUser\", JSON.stringify(loginUser));\r\n        setUsers([...usersArray]);\r\n    }\r\n\r\n    const clearAll = (id) => {\r\n        let loginUser = { ...user };\r\n        let usersArray = JSON.parse(localStorage.getItem(\"users\") || '[]');;\r\n        usersArray = usersArray.map(user => {\r\n            if (user.id === id) {\r\n                loginUser = { ...user, list: [] };\r\n                setUser(loginUser);\r\n                return { ...user, list: [] };\r\n            } else return user;\r\n        });\r\n        localStorage.setItem(\"users\", JSON.stringify(usersArray));\r\n        localStorage.setItem(\"loginUser\", JSON.stringify(loginUser));\r\n    }\r\n\r\n    return (\r\n        <div className=\"todolist\">\r\n            <div className=\"container\" >\r\n                <div className=\"head\" >\r\n                    <h1>{user.name.toUpperCase()}'s Todo List</h1>\r\n\r\n                    <NavLink to=\"/Todo_List/\">\r\n                        <button onClick={handleLogout} type=\"button\" name=\"logout\"  >Logout</button>\r\n                    </NavLink>\r\n\r\n                </div>\r\n                <form>\r\n                    <input placeholder=\"Enter New Item\" value={newItem} onChange={handleText} type=\"text\" name=\"todo\" />\r\n                    <button onClick={() => addToList(user.id)} type=\"button\" name=\"addtodo\"  >Add</button>\r\n                </form>\r\n                <ul className=\"list\">\r\n                    {showList()}\r\n                </ul>\r\n                <button onClick={() => clearAll(user.id)} className=\"clearbutton\" type=\"button\" name=\"clear\"  >Clear All</button>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TodoList\r\n","import { useEffect } from 'react';\nimport { useRecoilState } from 'recoil';\nimport './App.css';\nimport Login from './components/login'\nimport Signup from './components/signup'\nimport TodoList from './components/todolist';\nimport { wrapState, userState, usersState } from './recoil'\nimport { BrowserRouter, Routes, Route } from 'react-router-dom';\n\nconst App = () => {\n  const [user, setUser] = useRecoilState(userState);\n  const [wrap, setWrap] = useRecoilState(wrapState);\n  const [users, setUsers] = useRecoilState(usersState);\n\n\n  const getData = async () => {\n    const data = JSON.parse(localStorage.getItem(\"users\") || '[]');\n    const userData = JSON.parse(localStorage.getItem(\"loginUser\"));\n    const routingWrap = JSON.parse(localStorage.getItem(\"wrap\") || '{}');\n\n    setUsers(data);\n    setWrap(routingWrap);\n    if (localStorage.loginUser) {\n      setUser(userData);\n    }\n  }\n  useEffect(() => {\n    getData();\n  }, [])\n\n\n  return (\n    <BrowserRouter>\n      <Routes>\n        {/* <Login /> */}\n        <Route exact path=\"/Todo_List/\" element={<Login />} />\n        <Route path=\"/Todo_List/components/signup.js\" element={<Signup />} />\n        <Route path=\"/Todo_List/components/todolist.js\" element={<TodoList />} />\n        {/* \n        {wrap.login ? (<Login />) : ''}\n        {wrap.signup ? (<Signup />) : ''}\n        {wrap.list ? (<TodoList users={users} addToList={addToList} deleteElement={deleteElement} clearAll={clearAll} />) : ''} */}\n      </Routes>\n    </BrowserRouter >\n  )\n}\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { RecoilRoot } from 'recoil'\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <RecoilRoot>\n      <App />\n    </RecoilRoot>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}