{"version":3,"sources":["recoil.js","components/login.js","components/signup.js","components/todolist.js","App.js","index.js"],"names":["usersState","atom","key","default","userState","name","username","list","id","password","wrapState","login","signup","newItemState","defualt","Login","useRecoilState","user","setUser","useState","input","setInput","wrap","setWrap","className","onChange","e","target","value","placeholder","type","onClick","routingWrap","loginUser","JSON","parse","localStorage","getItem","forEach","one","console","log","setItem","stringify","Signup","Math","random","newUser","setnewUser","users","setUsers","data","found","addNewUser","TodoList","addToList","deleteElement","clearAll","newItem","setNewItem","toUpperCase","length","map","item","App","getData","a","userData","useEffect","arr","push","usersArray","filter","elementId","itemId","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.31f0658f.chunk.js","sourcesContent":["import { atom } from 'recoil'\r\n\r\nexport const usersState = atom({\r\n    key: 'usersState',\r\n    default: []\r\n});\r\nexport const userState = atom({\r\n    key: 'userState',\r\n    default: { name: '', username: '', list: [], id: '', password: '' }\r\n});\r\nexport const errorState = atom({\r\n    key: 'errorState',\r\n    default: ''\r\n});\r\nexport const signupState = atom({\r\n    key: 'signupState',\r\n    default: false\r\n});\r\n\r\nexport const wrapState = atom({\r\n    key: 'wrapState',\r\n    default: {\r\n        list: false,\r\n        login: true,\r\n        signup: false\r\n    }\r\n})\r\nexport const userListState = atom({\r\n    key: 'userListState',\r\n    defualt: [{\r\n        id: 0,\r\n        name: ''\r\n    }]\r\n});\r\nexport const newItemState = atom({\r\n    key: 'newItemState',\r\n    defualt: ''\r\n});\r\n","import './style.css'\r\nimport { useState } from 'react'\r\nimport { userState, errorState, wrapState, usersState } from './../recoil'\r\nimport { useRecoilState } from 'recoil'\r\n\r\n\r\n\r\nconst Login = () => {\r\n\r\n    const [users, setUsers] = useRecoilState(usersState);\r\n    const [user, setUser] = useRecoilState(userState);\r\n    // const [error, setError] = useRecoilState(errorState);\r\n    const [input, setInput] = useState({ username: '', password: '' })\r\n    const [wrap, setWrap] = useRecoilState(wrapState);\r\n\r\n\r\n\r\n    const handleUsername = (e) => {\r\n        setInput({ ...input, username: e.target.value })\r\n    }\r\n\r\n    const handlePassword = (e) => {\r\n        setInput({ ...input, password: e.target.value })\r\n    }\r\n\r\n    const handleSubmit = () => {\r\n        let routingWrap = { ...wrap };\r\n        let loginUser = { ...user };\r\n        let usersArray = JSON.parse(localStorage.getItem(\"users\") || '[]');;\r\n        usersArray.forEach(one => {\r\n            if (one.username === input.username && one.password === input.password) {\r\n                loginUser = { ...user, username: one.username, name: one.name, id: one.id, list: one.list, password: one.password }\r\n                setUser(loginUser);\r\n                routingWrap = { list: true, login: false, signup: false }\r\n                setWrap(routingWrap);\r\n            }\r\n        })\r\n        console.log(loginUser);\r\n        localStorage.setItem(\"loginUser\", JSON.stringify(loginUser));\r\n        localStorage.setItem(\"wrap\", JSON.stringify(routingWrap));\r\n\r\n    }\r\n\r\n    const handleSignup = () => {\r\n        let routingWrap = { ...wrap };\r\n        routingWrap = { list: false, login: false, signup: true };\r\n        setWrap(routingWrap);\r\n        localStorage.setItem(\"wrap\", JSON.stringify(routingWrap));\r\n        localStorage.setItem(\"loginUser\", JSON.stringify([]));\r\n    }\r\n\r\n    return (\r\n        <div className=\"login\">\r\n            <div className=\"container\">\r\n                <h1>LOGIN</h1>\r\n                <input onChange={handleUsername} placeholder=\"Username\" type=\"text\" name=\"username\" />\r\n                <input onChange={handlePassword} placeholder=\"password\" type=\"password\" name=\"password\" />\r\n                <div className=\"buttons\">\r\n                    <button onClick={handleSubmit} type=\"button\" name=\"login\" value=\"Login\" >Login</button>\r\n                    <span>OR</span>\r\n                    <button onClick={handleSignup} type=\"button\" name=\"signup\">Create New Account</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n    // return (\r\n    //     <TodoList name={user.name} />\r\n    // )\r\n}\r\n\r\nexport default Login\r\n","import './style.css'\r\nimport { useRecoilState } from 'recoil'\r\nimport { useState } from 'react'\r\nimport { wrapState, userState, usersState } from '../recoil'\r\n\r\nconst Signup = () => {\r\n    const [newUser, setnewUser] = useState({ id: Math.random(), name: '', username: '', password: '', list: [] });\r\n    const [wrap, setWrap] = useRecoilState(wrapState);\r\n    const [user, setUser] = useRecoilState(userState);\r\n    const [users, setUsers] = useRecoilState(usersState);\r\n\r\n\r\n\r\n    const addNewUser = (newUser) => {\r\n        let loginUser = { ...user };\r\n        let data = [...users];\r\n        let found = false;\r\n        users.forEach(user => {\r\n            if (newUser.username === user.username) {\r\n                found = true;\r\n            }\r\n        })\r\n        console.log(found);\r\n        if (!found) {\r\n            loginUser = { name: newUser.name, username: newUser.username, list: [], id: Math.random(), password: newUser.password };\r\n            setUser(loginUser);\r\n            data = [...data, loginUser];\r\n            setUsers([...data]);\r\n            localStorage.setItem(\"users\", JSON.stringify(data));\r\n            setWrap({ list: true, login: false, signup: false });\r\n            localStorage.setItem(\"wrap\", JSON.stringify(wrap));\r\n            localStorage.setItem(\"loginUser\", JSON.stringify(loginUser));\r\n        }\r\n    }\r\n    const saveName = (e) => {\r\n        setnewUser({ ...newUser, name: e.target.value });\r\n    }\r\n    const saveUsername = (e) => {\r\n        setnewUser({ ...newUser, username: e.target.value });\r\n    }\r\n    const savePassword = (e) => {\r\n        setnewUser({ ...newUser, password: e.target.value });\r\n    }\r\n    const saveNewUser = () => {\r\n        if (newUser.name !== '' && newUser.username !== '' && newUser.password !== '') {\r\n            addNewUser(newUser);\r\n        }\r\n        else {\r\n            console.log('incorrect')\r\n        }\r\n    }\r\n    const cancel = () => {\r\n        setWrap({ list: false, login: true, signup: false });\r\n        localStorage.setItem(\"wrap\", JSON.stringify(wrap));\r\n    }\r\n    return (\r\n        <div className=\"signup\">\r\n            <div className=\"container\">\r\n                <h1>SIGN UP</h1>\r\n                <form>\r\n                    <label>Enter your name</label>\r\n                    <input onChange={saveName} placeholder=\"Name\" type=\"text\" name=\"name\" />\r\n                    <label>Enter your Email or Username</label>\r\n                    <input onChange={saveUsername} placeholder=\"Username\" type=\"text\" name=\"username\" />\r\n                    <label>Enter your password</label>\r\n                    <input onChange={savePassword} placeholder=\"password\" type=\"password\" name=\"password\" />\r\n                    <div className=\"confirm\" >\r\n                        <button onClick={saveNewUser} type=\"button\" name=\"login\" value=\"Login\" >Save</button>\r\n                        <button onClick={cancel} className=\"cancel\" type=\"button\" name=\"cancel\"  >Cancel</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Signup\r\n","import './style.css'\r\nimport { useRecoilState } from 'recoil'\r\nimport { userState, wrapState, newItemState } from './../recoil'\r\nconst TodoList = ({ addToList, deleteElement, clearAll }) => {\r\n    const [user, setUser] = useRecoilState(userState);\r\n    const [wrap, setWrap] = useRecoilState(wrapState);\r\n    const [newItem, setNewItem] = useRecoilState(newItemState);\r\n\r\n    const handleLogout = () => {\r\n        let routingWrap = { ...wrap };\r\n        let loginUser = { ...user, username: '', name: '', id: '', list: [], password: '' };\r\n        localStorage.setItem(\"loginUser\", JSON.stringify(loginUser));\r\n        setUser(loginUser);\r\n        routingWrap = { list: false, login: true, signup: false };\r\n        setWrap(routingWrap);\r\n        localStorage.setItem(\"wrap\", JSON.stringify(routingWrap));\r\n    }\r\n    const handleText = (e) => {\r\n        setNewItem(e.target.value);\r\n    }\r\n\r\n    const showList = () => {\r\n        if (!user.list.length) {\r\n            return (\r\n                <p>there is no items</p>\r\n            )\r\n        }\r\n        else {\r\n            return (\r\n                user.list.map(item => {\r\n                    return (\r\n                        <li key={Math.random()} className=\"item\">\r\n                            <div>{item.name}</div>\r\n                            <button onClick={() => deleteElement(user.id, item.id)}>x</button>\r\n                        </li>\r\n                    )\r\n                })\r\n            )\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <div className=\"todolist\">\r\n            <div className=\"container\" >\r\n                <div className=\"head\" >\r\n                    <h1>{user.name.toUpperCase()}'s Todo List</h1>\r\n                    <button onClick={handleLogout} type=\"button\" name=\"logout\"  >Logout</button>\r\n                </div>\r\n                <form>\r\n                    <input placeholder=\"Enter New Item\" value={newItem} onChange={handleText} type=\"text\" name=\"todo\" />\r\n                    <button onClick={() => addToList(user.id)} type=\"button\" name=\"addtodo\"  >Add</button>\r\n                </form>\r\n                <ul className=\"list\">\r\n                    {showList()}\r\n                </ul>\r\n                <button onClick={() => clearAll(user.id)} className=\"clearbutton\" type=\"button\" name=\"clear\"  >Clear All</button>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TodoList\r\n","import { useEffect } from 'react';\nimport { useRecoilState } from 'recoil';\nimport './App.css';\nimport Login from './components/login'\nimport Signup from './components/signup'\nimport TodoList from './components/todolist';\nimport { wrapState, userState, usersState, newItemState } from './recoil'\n\n\nconst App = () => {\n  const [user, setUser] = useRecoilState(userState);\n  const [wrap, setWrap] = useRecoilState(wrapState);\n  const [users, setUsers] = useRecoilState(usersState);\n  const [newItem, setNewItem] = useRecoilState(newItemState);\n\n\n  // let isLogin = false;\n  const getData = async () => {\n    const data = JSON.parse(localStorage.getItem(\"users\") || '[]');\n    const userData = JSON.parse(localStorage.getItem(\"loginUser\"));\n    const routingWrap = JSON.parse(localStorage.getItem(\"wrap\") || '{}');\n\n    setUsers(data);\n    setWrap(routingWrap);\n    if (localStorage.loginUser) {\n      setUser(userData);\n    }\n  }\n  useEffect(() => {\n    getData();\n  }, [])\n\n\n\n\n  const addToList = (id) => {\n    let loginUser = { ...user };\n    if (newItem !== '') {\n      let arr = [];\n      arr = [...loginUser.list];\n      arr.push({ id: Math.random(), name: newItem });\n      loginUser.list = [...arr];\n      setUser(loginUser);\n      setNewItem('');\n    }\n    let usersArray = JSON.parse(localStorage.getItem(\"users\") || '[]');;\n    usersArray = usersArray.filter(user => { return (user.id !== id) });\n    usersArray.push(loginUser);\n    localStorage.setItem(\"users\", JSON.stringify(usersArray));\n    localStorage.setItem(\"loginUser\", JSON.stringify(loginUser));\n  }\n\n  const deleteElement = (elementId, itemId) => {\n    let usersArray = JSON.parse(localStorage.getItem(\"users\") || '[]');;\n    let loginUser = { ...user };\n    let arr = user.list;\n    arr = arr.filter(item => { return (item.id !== itemId) });\n    loginUser.list = [...arr];\n    setUser(loginUser);\n    usersArray = usersArray.filter(user => { return (user.id !== elementId) });\n    usersArray.push(loginUser);\n    localStorage.setItem(\"users\", JSON.stringify(usersArray));\n    localStorage.setItem(\"loginUser\", JSON.stringify(loginUser));\n    setUsers([...usersArray]);\n  }\n\n  const clearAll = (id) => {\n    let loginUser = { ...user };\n    let usersArray = JSON.parse(localStorage.getItem(\"users\") || '[]');;\n    usersArray = usersArray.map(user => {\n      if (user.id === id) {\n        loginUser = { ...user, list: [] };\n        setUser(loginUser);\n        return { ...user, list: [] };\n      } else return user;\n    });\n    localStorage.setItem(\"users\", JSON.stringify(usersArray));\n    localStorage.setItem(\"loginUser\", JSON.stringify(loginUser));\n  }\n\n  return (\n    <div className=\"App\">\n      {wrap.login ? (<Login />) : ''}\n      {wrap.signup ? (<Signup />) : ''}\n      {wrap.list ? (<TodoList users={users} addToList={addToList} deleteElement={deleteElement} clearAll={clearAll} />) : ''}\n    </div>\n  )\n}\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { RecoilRoot } from 'recoil'\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <RecoilRoot>\n      <App />\n    </RecoilRoot>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}